generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model restaurants {
  id          Int          @id @default(autoincrement())
  name        String?
  geolocation GeoLocation?
  reviews     Reviews[]
  List        List?        @relation(fields: [listId], references: [id])
  listId      Int?
}

model GeoLocation {
  id           Int         @id @default(autoincrement())
  lat          Float
  lng          Float
  restaurant   restaurants @relation(fields: [restaurantId], references: [id])
  restaurantId Int         @unique
}

model Reviews {
  id           Int         @id @default(autoincrement())
  restaurant   restaurants @relation(fields: [restaurantId], references: [id], onDelete: Cascade)
  restaurantId Int
  user         User        @relation(fields: [userId], references: [id])
  userId       String
  rating       Int
  comment      String?
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  reviews       Reviews[]
  List          List[]
}

model List {
  id          Int           @id @default(autoincrement())
  name        String
  restaurants restaurants[]
  user        User          @relation(fields: [userId], references: [id])
  userId      String
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
